<?xml version="1.0" encoding="UTF-8"?>

<beans 
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd 
    http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <mvc:annotation-driven conversion-service="conversionService"/> 
	<tx:annotation-driven />

	<context:component-scan base-package="com.jiayun.scp.controller" />
    <context:component-scan base-package="com.jiayun.scp.dao" />
    <context:component-scan base-package="com.jiayun.scp.formatter" />
    <context:component-scan base-package="com.jiayun.scp.util" />
    
<!-- 
	Spring MVC config
 -->

    <mvc:resources mapping="/static/**" location="/static/" cache-period="31556926"/>
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="prefix" value="/WEB-INF/pages/" />
    	<property name="suffix" value=".jsp" />
    </bean>


<!-- 
	Spring MVC Formatter config
 -->    

	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
		<set>
			<bean class="com.jiayun.scp.formatter.LongToDateString" />
		</set>
		</property>
	</bean>
 

<!-- 
	Spring Transaction Manager config
 -->


<!-- 
	Actually, spring hibernate5.LocalSessionFactory doesn't need a data source!  
	It will use local hibernate configuration (hibernate.properties)
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
	    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
	    <property name="url" value="jdbc:mysql://localhost/jiayun_scp?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8" /> 
	    <property name="username" value="root" />
	    <property name="password" value="" />
	</bean>
-->

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
	    <!-- <property name="dataSource" ref="dataSource"></property> -->
	    <property name="hibernateProperties">
	    	<props>
        		<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
        		<prop key="hibernate.connection.characterEncoding">UTF-8</prop>
                <prop key="hibernate.connection.useUnicode">true</prop>
      		</props>
    	</property>
    	<property name="packagesToScan" value="com.jiayun.scp.model" />
  	</bean>
  
  	<bean id="transactionManager"
    	class="org.springframework.orm.hibernate5.HibernateTransactionManager" 
    	p:sessionFactory-ref="sessionFactory">
  	</bean>    
  	
  	<bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />	
<!-- 
	spring security configuration
 -->
 	<bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg name="strength" value="11" />
 	</bean>
 	<bean id="loginSuccessHandler" class="com.jiayun.scp.controller.LoginSuccessHandler"/>
  	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/sale/order/input" 	access="hasAnyRole('SALES')" />
		<security:intercept-url pattern="/sale/order/edit/**" 	access="hasAnyRole('SALES')" />
		<security:intercept-url pattern="/sale/order_upload/**" access="hasAnyRole('SALES')" />
		<security:intercept-url pattern="/sale/**" 				access="hasAnyRole('USER', 'SUPER')" />

		<security:intercept-url pattern="/product/part/input" 		access="hasAnyRole('PRODUCT')" />
		<security:intercept-url pattern="/product/part/edit/**" 	access="hasAnyRole('PRODUCT')" />
		<security:intercept-url pattern="/product/part_upload/**" 	access="hasAnyRole('PRODUCT')" />
		<security:intercept-url pattern="/product/combo/input" 		access="hasAnyRole('PRODUCT')" />
		<security:intercept-url pattern="/product/combo/edit/**" 	access="hasAnyRole('PRODUCT')" />
		<security:intercept-url pattern="/product/combo_upload/**" 	access="hasAnyRole('PRODUCT')" />
		<security:intercept-url pattern="/product/**" 				access="hasAnyRole('USER')" />
		
		<security:intercept-url pattern="/customer/**"			access="hasAnyRole('SALES')" />
		<security:intercept-url pattern="/staff/passwd/**" 		access="hasAnyRole('USER', 'SUPER')" />
		<security:intercept-url pattern="/staff/**" 			access="hasAnyRole('ADMIN', 'SUPER')" />
		<security:intercept-url pattern="/index**" 				access="hasAnyRole('USER', 'SUPER')"/>
		<security:csrf disabled="true"/>
	 	<security:form-login 
			login-page="/login"  
            default-target-url="/index"
            authentication-success-handler-ref="loginSuccessHandler"
        />
        <security:remember-me key="jscp"/>
	</security:http> 
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="jiayunUserDetailsService">
			<!-- <security:password-encoder hash="plaintext"/> -->
			<security:password-encoder ref="encoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
</beans>